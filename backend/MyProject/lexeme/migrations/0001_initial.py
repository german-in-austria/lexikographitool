# Generated by Django 3.1.4 on 2021-03-04 07:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('state_code', models.CharField(blank=True, max_length=100, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('province_code', models.CharField(blank=True, max_length=100, null=True)),
                ('community', models.CharField(blank=True, max_length=100, null=True)),
                ('community_code', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dialect',
            fields=[
                ('dialect', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Lexeme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LexemeContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('word', models.CharField(blank=True, max_length=100, null=True)),
                ('variety', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('kind', models.CharField(choices=[('N', 'noun'), ('V', 'verb'), ('Aj', 'adjective'), ('Av', 'adverb'), ('P', 'phrase')], max_length=255, null=True)),
                ('dialectWord', models.CharField(max_length=100)),
                ('sensitive', models.BooleanField(default=False)),
                ('Lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='lexeme.lexeme')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dialect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dialectWords', to='lexeme.dialect')),
                ('origin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dialectWords', to='lexeme.address')),
            ],
        ),
        migrations.CreateModel(
            name='Pronunciation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pronunciation', models.CharField(max_length=100)),
                ('dialectWord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pronunciations', to='lexeme.lexemecontent')),
            ],
        ),
        migrations.CreateModel(
            name='LikeLexeme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('like', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lexeme.lexeme')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'lexeme')},
            },
        ),
        migrations.AddField(
            model_name='lexeme',
            name='liked_from',
            field=models.ManyToManyField(related_name='collections', through='lexeme.LikeLexeme', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('example', models.CharField(max_length=100)),
                ('dialectWord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='lexeme.lexemecontent')),
            ],
        ),
        migrations.CreateModel(
            name='Etymology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etymology', models.CharField(max_length=100)),
                ('dialectWord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etymologies', to='lexeme.lexemecontent')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('lexemes', models.ManyToManyField(related_name='categories', to='lexeme.LexemeContent')),
            ],
        ),
    ]
